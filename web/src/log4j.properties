# For all other servers: Comment out the Log4J listener in web.xml to activate Log4J.
#commons-logging.jar
#log4j.logger.org.hibernate=error

#----第一个参数表示日志级别-----打印查询SQL语句请设为 info warn------
log4j.rootLogger=info,A1

#----ConsoleAppender--------输出到控制台-----------------
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%d] [%-5p] %c %n--%m--%n
log4j.appender.A1.encoding=GB2312

#----根据一定时间自动产生新日志文件-----DailyRollingFileAppender-----------------
log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A2.Threshold=debug
log4j.appender.A2.file=/mbp/log4j/payback.log
log4j.appender.A2.DatePattern='.'yyyyMMdd
#log4j.appender.A2.MaxFileSize=100KB
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d %-4r [%t] %-5p %c %x (%F\:%L) - %m%n 
log4j.appender.A2.encoding=GB2312

#----写入数据库
#log4j.appender.db=cn.com.zyx.util.Log4jDB
#log4j.appender.db.Threshold=ERROR
#log4j.appender.db.BufferSize=1
#log4j.appender.db.sql=insert into zyxlog(CLASS,METHOD,CREATE_TIME,LOG_LEVEL,MSG) values ('%C','%M',sysdate,'%p','(%F\:%L) - %m')
#log4j.appender.db.layout=org.apache.log4j.PatternLayout

#CREATE TABLE ZYXLOG(
#CLASS VARCHAR(255),--类名
#METHOD VARCHAR(255),--方法名
#CREATE_TIME DATE,--创建时间
#LOG_LEVEL VARCHAR(20),--日志级别
#MSG VARCHAR(4000)--日志信息
#)
  
# %c 输出日志信息所属的类的全名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28
# %f 输出日志信息所属的类的类名
# %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自应用启动到输出该日志信息所耗费的毫秒数
# %t 输出产生该日志事件的线程名
# %x 输出当前登录人

#避免debug等级日志输出
#log4j.logger.config.mybatis.auth=trace
#log4j.logger.com.web.mapper=trace